"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SELECTOR_OTHER_CREATURES_OF_TYPE = exports.SELECTOR_OWN_CREATURES_OF_TYPE = exports.SELECTOR_CREATURES_NOT_OF_TYPE = exports.SELECTOR_CREATURES_OF_TYPE = exports.SELECTOR_OWN_CARDS_IN_PLAY = exports.SELECTOR_CARDS_WITH_ENERGIZE_RATE = exports.SELECTOR_OWN_CARDS_WITH_ENERGIZE_RATE = exports.SELECTOR_ENEMY_CREATURES = exports.SELECTOR_OWN_CREATURES = exports.SELECTOR_MAGI_NOT_OF_REGION = exports.SELECTOR_MAGI_OF_REGION = exports.SELECTOR_CREATURES_NOT_OF_REGION = exports.SELECTOR_CREATURES_OF_REGION = exports.SELECTOR_ENEMY_MAGI = exports.SELECTOR_TOP_MAGI_OF_PILE = exports.SELECTOR_OWN_MAGI = exports.SELECTOR_CREATURES_AND_MAGI = exports.SELECTOR_MAGI = exports.SELECTOR_CREATURES = exports.SELECTOR_OPPONENT_ID = exports.PROPERTY_STATUS = exports.PROPERTY_STATUS_WAS_ATTACKED = exports.PROPERTY_STATUS_DEFEATED_CREATURE = exports.PROPERTY_ENERGY_LOSS_THRESHOLD = exports.PROPERTY_POWER_COST = exports.PROPERTY_CAN_ATTACK_MAGI_DIRECTLY = exports.PROPERTY_ABLE_TO_ATTACK = exports.PROPERTY_ATTACKS_PER_TURN = exports.PROPERTY_MAGI_STARTING_ENERGY = exports.PROPERTY_CREATURE_TYPES = exports.PROPERTY_ENERGIZE = exports.PROPERTY_COST = exports.PROPERTY_REGION = exports.PROPERTY_CONTROLLER = exports.PROPERTY_ENERGY_COUNT = exports.PROPERTY_TYPE = exports.PROPERTY_ID = exports.ACTION_PROPERTY = exports.ACTION_PLAYER_WINS = exports.ACTION_CONCEDE = exports.ACTION_ATTACK = exports.ACTION_GET_PROPERTY_VALUE = exports.ACTION_RESOLVE_PROMPT = exports.ACTION_ENTER_PROMPT = exports.ACTION_CALCULATE = exports.ACTION_SELECT = exports.ACTION_EFFECT = exports.ACTION_POWER = exports.ACTION_PLAY = exports.ACTION_PASS = void 0;
exports.EFFECT_TYPE_MOVE_CARDS_BETWEEN_ZONES = exports.EFFECT_TYPE_MOVE_CARD_BETWEEN_ZONES = exports.EFFECT_TYPE_STARTING_ENERGY_ON_CREATURE = exports.EFFECT_TYPE_PAYING_ENERGY_FOR_CREATURE = exports.EFFECT_TYPE_PAYING_ENERGY_FOR_SPELL = exports.EFFECT_TYPE_PAYING_ENERGY_FOR_RELIC = exports.EFFECT_TYPE_RELIC_ENTERS_PLAY = exports.EFFECT_TYPE_CREATURE_ENTERS_PLAY = exports.EFFECT_TYPE_PLAY_SPELL = exports.EFFECT_TYPE_PLAY_RELIC = exports.EFFECT_TYPE_PLAY_CREATURE = exports.EFFECT_TYPE_MOVE_ENERGY = exports.EFFECT_TYPE_ROLL_DIE = exports.EFFECT_TYPE_MAGI_IS_DEFEATED = exports.EFFECT_TYPE_DEFEAT_MAGI = exports.EFFECT_TYPE_CREATURE_IS_DEFEATED = exports.EFFECT_TYPE_CREATURE_DEFEATS_CREATURE = exports.EFFECT_TYPE_AFTER_DAMAGE = exports.EFFECT_TYPE_DEAL_DAMAGE = exports.EFFECT_TYPE_DEFENDER_DEALS_DAMAGE = exports.EFFECT_TYPE_ATTACKER_DEALS_DAMAGE = exports.EFFECT_TYPE_BEFORE_DAMAGE = exports.EFFECT_TYPE_RESHUFFLE_DISCARD = exports.EFFECT_TYPE_START_TURN = exports.EFFECT_TYPE_START_STEP = exports.EFFECT_TYPE_DRAW = exports.EFFECT_TYPE_NONE = exports.REGION_UNIVERSAL = exports.REGION_BOGRATH = exports.REGION_UNDERNEATH = exports.REGION_OROTHE = exports.REGION_NAROOM = exports.REGION_CALD = exports.REGION_ARDERIAL = exports.CALCULATION_MAX = exports.CALCULATION_MIN = exports.CALCULATION_HALVE_ROUND_UP = exports.CALCULATION_HALVE_ROUND_DOWN = exports.CALCULATION_SUBTRACT_TO_MINIMUM_OF_ONE = exports.CALCULATION_SUBTRACT = exports.CALCULATION_ADD = exports.CALCULATION_DOUBLE = exports.CALCULATION_SET = exports.STATUS_FROZEN = exports.STATUS_BURROWED = exports.SELECTOR_STATUS = exports.SELECTOR_CREATURES_WITHOUT_STATUS = exports.SELECTOR_OWN_CREATURES_WITH_STATUS = exports.SELECTOR_OWN_SPELLS_IN_HAND = exports.SELECTOR_RELICS = void 0;
exports.RESTRICTION_OPPONENT_CREATURE = exports.RESTRICTION_OWN_CREATURE = exports.RESTRICTION_ENERGY_LESS_THAN = exports.RESTRICTION_ENERGY_LESS_THAN_STARTING = exports.RESTRICTION_TYPE = exports.PROMPT_TYPE_NUMBER = exports.PROMPT_TYPE_RELIC = exports.PROMPT_TYPE_SINGLE_MAGI = exports.PROMPT_TYPE_NUMBER_OF_CREATURES_FILTERED = exports.PROMPT_TYPE_NUMBER_OF_CREATURES = exports.PROMPT_TYPE_SINGLE_CREATURE_FILTERED = exports.PROMPT_TYPE_OWN_SINGLE_CREATURE = exports.PROMPT_TYPE_SINGLE_CREATURE = exports.PROMPT_TYPE_SINGLE_CREATURE_OR_MAGI = exports.PROMPT_TYPE_ANY_CREATURE_EXCEPT_SOURCE = exports.PROMPT_TYPE_CHOOSE_N_CARDS_FROM_ZONE = exports.PROMPT_TYPE_CHOOSE_CARDS = exports.PRIORITY_CREATURES = exports.PRIORITY_ATTACK = exports.PRIORITY_PRS = exports.NO_PRIORITY = exports.EFFECT_TYPE_ADD_DELAYED_TRIGGER = exports.EFFECT_TYPE_FORBID_ATTACK_TO_CREATURE = exports.EFFECT_TYPE_DISCARD_CARDS_FROM_HAND = exports.EFFECT_TYPE_DRAW_REST_OF_CARDS = exports.EFFECT_TYPE_FIND_STARTING_CARDS = exports.EFFECT_TYPE_MAGI_FLIPPED = exports.EFFECT_TYPE_END_OF_TURN = exports.EFFECT_TYPE_START_OF_TURN = exports.EFFECT_TYPE_DRAW_CARDS_IN_DRAW_STEP = exports.EFFECT_TYPE_CREATURE_IS_ATTACKED = exports.EFFECT_TYPE_CREATURE_ATTACKS = exports.EFFECT_TYPE_DISCARD_RELIC_FROM_PLAY = exports.EFFECT_TYPE_PAYING_ENERGY_FOR_POWER = exports.EFFECT_TYPE_RESTORE_CREATURE_TO_STARTING_ENERGY = exports.EFFECT_TYPE_DISCARD_ENERGY_FROM_CREATURE_OR_MAGI = exports.EFFECT_TYPE_DISCARD_CREATURE_OR_RELIC = exports.EFFECT_TYPE_DISCARD_CREATURE_FROM_PLAY = exports.EFFECT_TYPE_DISCARD_ENERGY_FROM_MAGI = exports.EFFECT_TYPE_DISCARD_ENERGY_FROM_CREATURE = exports.EFFECT_TYPE_RETURN_CREATURE_RETURNING_ENERGY = exports.EFFECT_TYPE_RETURN_CREATURE_DISCARDING_ENERGY = exports.EFFECT_TYPE_DAMAGE_STEP = exports.EFFECT_TYPE_ENERGIZE = exports.EFFECT_TYPE_ADD_STARTING_ENERGY_TO_MAGI = exports.EFFECT_TYPE_ADD_ENERGY_TO_MAGI = exports.EFFECT_TYPE_ADD_ENERGY_TO_CREATURE = exports.EFFECT_TYPE_ADD_ENERGY_TO_CREATURE_OR_MAGI = exports.EFFECT_TYPE_CONDITIONAL = exports.EFFECT_TYPE_CARD_MOVED_BETWEEN_ZONES = void 0;
exports.LOG_ENTRY_MAGI_DEFEATED = exports.LOG_ENTRY_MAGI_ENERGY_GAIN = exports.LOG_ENTRY_CREATURE_ENERGY_GAIN = exports.LOG_ENTRY_MAGI_ENERGY_LOSS = exports.LOG_ENTRY_CREATURE_ENERGY_LOSS = exports.LOG_ENTRY_ATTACK = exports.LOG_ENTRY_NUMBER_CHOICE = exports.LOG_ENTRY_TARGETING = exports.LOG_ENTRY_RELIC_DISCARDED_FROM_PLAY = exports.LOG_ENTRY_CREATURE_DISCARDED_FROM_PLAY = exports.LOG_ENTRY_POWER_ACTIVATION = exports.LOG_ENTRY_CHOOSES_STARTING_CARDS = exports.LOG_ENTRY_DRAW = exports.LOG_ENTRY_PLAY = exports.ZONE_TYPE_HAND = exports.ZONE_TYPE_DISCARD = exports.ZONE_TYPE_IN_PLAY = exports.ZONE_TYPE_DECK = exports.ZONE_TYPE_DEFEATED_MAGI = exports.ZONE_TYPE_MAGI_PILE = exports.ZONE_TYPE_ACTIVE_MAGI = exports.COST_X = exports.TYPE_SPELL = exports.TYPE_RELIC = exports.TYPE_MAGI = exports.TYPE_CREATURE = exports.RESTRICTION_STATUS = exports.RESTRICTION_MAGI_WITHOUT_CREATURES = exports.RESTRICTION_CREATURE_WAS_ATTACKED = exports.RESTRICTION_PLAYABLE = exports.RESTRICTION_CREATURE_TYPE = exports.RESTRICTION_REGION = void 0;
exports.ACTION_PASS = 'actions/pass';
exports.ACTION_PLAY = 'actions/play';
exports.ACTION_POWER = 'actions/power';
exports.ACTION_EFFECT = 'actions/effect';
exports.ACTION_SELECT = 'actions/select';
exports.ACTION_CALCULATE = 'actions/calculate';
exports.ACTION_ENTER_PROMPT = 'actions/enter_prompt';
exports.ACTION_RESOLVE_PROMPT = 'actions/resolve_prompt';
exports.ACTION_GET_PROPERTY_VALUE = 'actions/get_property_value';
exports.ACTION_ATTACK = 'actions/attack';
exports.ACTION_CONCEDE = 'actions/concede';
exports.ACTION_PLAYER_WINS = 'actions/player_wins';
exports.ACTION_PROPERTY = 'special_properties/action_property';
exports.PROPERTY_ID = 'properties/id';
exports.PROPERTY_TYPE = 'properties/type';
exports.PROPERTY_ENERGY_COUNT = 'properties/energy_count';
exports.PROPERTY_CONTROLLER = 'properties/controller';
exports.PROPERTY_REGION = 'properties/region';
exports.PROPERTY_COST = 'properties/cost';
exports.PROPERTY_ENERGIZE = 'properties/energize';
exports.PROPERTY_CREATURE_TYPES = 'properties/creature_types';
exports.PROPERTY_MAGI_STARTING_ENERGY = 'properties/magi_starting_energy';
exports.PROPERTY_ATTACKS_PER_TURN = 'properties/attacks_per_turn';
exports.PROPERTY_ABLE_TO_ATTACK = 'properties/able_to_attack';
exports.PROPERTY_CAN_ATTACK_MAGI_DIRECTLY = 'properties/can_attack_magi_directly';
exports.PROPERTY_POWER_COST = 'properties/power_cost'; // NOT FOR PROPERTY GETTER, ONLY STATIC ABILITIES
exports.PROPERTY_ENERGY_LOSS_THRESHOLD = 'properties/energy_loss_threshold';
// Maybe make statuses into separate category
exports.PROPERTY_STATUS_DEFEATED_CREATURE = 'properties/status/defeated_creature';
exports.PROPERTY_STATUS_WAS_ATTACKED = 'properties/status/was_attacked';
exports.PROPERTY_STATUS = 'properties/status';
exports.SELECTOR_OPPONENT_ID = 'selectors/opponent_id'; // THIS WILL RETURN ID OF PLAYER'S OPPONENT
exports.SELECTOR_CREATURES = 'selectors/creatures';
exports.SELECTOR_MAGI = 'selectors/magi';
exports.SELECTOR_CREATURES_AND_MAGI = 'selectors/creatures_and_magi';
exports.SELECTOR_OWN_MAGI = 'selectors/own_magi';
exports.SELECTOR_TOP_MAGI_OF_PILE = 'selectors/top_magi_of_pile';
exports.SELECTOR_ENEMY_MAGI = 'selectors/enemy_magi';
exports.SELECTOR_CREATURES_OF_REGION = 'selectors/creatures_of_region';
exports.SELECTOR_CREATURES_NOT_OF_REGION = 'selectors/creatures_not_of_region';
exports.SELECTOR_MAGI_OF_REGION = 'selectors/magi_of_region';
exports.SELECTOR_MAGI_NOT_OF_REGION = 'selectors/magi_not_of_region';
exports.SELECTOR_OWN_CREATURES = 'selectors/own_creatures';
exports.SELECTOR_ENEMY_CREATURES = 'selectors/enemy_creatures';
exports.SELECTOR_OWN_CARDS_WITH_ENERGIZE_RATE = 'selectors/own_cards_with_energize_rate';
exports.SELECTOR_CARDS_WITH_ENERGIZE_RATE = 'selectors/cards_with_energize_rate';
exports.SELECTOR_OWN_CARDS_IN_PLAY = 'selectors/own_cards_in_play';
exports.SELECTOR_CREATURES_OF_TYPE = 'selectors/creatures_of_type';
exports.SELECTOR_CREATURES_NOT_OF_TYPE = 'selectors/creatures_not_of_type';
exports.SELECTOR_OWN_CREATURES_OF_TYPE = 'selectors/own_creatures_of_type';
exports.SELECTOR_OTHER_CREATURES_OF_TYPE = 'selectors/other_creatures_of_type';
exports.SELECTOR_RELICS = 'selectors/relics';
exports.SELECTOR_OWN_SPELLS_IN_HAND = 'selectors/own_spells_in_hand';
exports.SELECTOR_OWN_CREATURES_WITH_STATUS = 'selectors/own_creatures_with_status';
exports.SELECTOR_CREATURES_WITHOUT_STATUS = 'selectors/creatures_without_status';
exports.SELECTOR_STATUS = 'selectors/status';
exports.STATUS_BURROWED = 'status/burrowed';
exports.STATUS_FROZEN = 'status/frozen';
exports.CALCULATION_SET = 'calculations/set';
exports.CALCULATION_DOUBLE = 'calculations/double';
exports.CALCULATION_ADD = 'calculations/add';
exports.CALCULATION_SUBTRACT = 'calculations/subtract';
exports.CALCULATION_SUBTRACT_TO_MINIMUM_OF_ONE = 'calculations/subtract_to_minimum_of_one';
exports.CALCULATION_HALVE_ROUND_DOWN = 'calculations/halve_round_down';
exports.CALCULATION_HALVE_ROUND_UP = 'calculations/halve_round_up';
exports.CALCULATION_MIN = 'calculations/min';
exports.CALCULATION_MAX = 'calculations/max';
exports.REGION_ARDERIAL = 'regions/arderial';
exports.REGION_CALD = 'regions/cald';
exports.REGION_NAROOM = 'regions/naroom';
exports.REGION_OROTHE = 'regions/orothe';
exports.REGION_UNDERNEATH = 'regions/underneath';
// export const REGION_WEAVE = 'regions/weave';
// export const REGION_KYBARS_TEETH = 'regions/kybars_teeth';
exports.REGION_BOGRATH = 'regions/bograth';
// export const REGION_PARADWYN = 'regions/paradwyn';
// export const REGION_D_RESH = 'regions/d_resh';
exports.REGION_UNIVERSAL = 'regions/universal';
exports.EFFECT_TYPE_NONE = 'effects/none';
exports.EFFECT_TYPE_DRAW = 'effects/draw';
exports.EFFECT_TYPE_START_STEP = 'effects/start_step';
exports.EFFECT_TYPE_START_TURN = 'effects/start_turn';
exports.EFFECT_TYPE_RESHUFFLE_DISCARD = 'effects/reshuffle_discard';
exports.EFFECT_TYPE_BEFORE_DAMAGE = 'effects/before_damage';
exports.EFFECT_TYPE_ATTACKER_DEALS_DAMAGE = 'effects/attacker_deals_damage';
exports.EFFECT_TYPE_DEFENDER_DEALS_DAMAGE = 'effects/defender_deals_damage';
exports.EFFECT_TYPE_DEAL_DAMAGE = 'effects/deal_damage';
exports.EFFECT_TYPE_AFTER_DAMAGE = 'effects/after_damage';
exports.EFFECT_TYPE_CREATURE_DEFEATS_CREATURE = 'effects/creature_defeats_creature';
exports.EFFECT_TYPE_CREATURE_IS_DEFEATED = 'effects/creature_is_defeated';
exports.EFFECT_TYPE_DEFEAT_MAGI = 'effects/defeat_magi';
exports.EFFECT_TYPE_MAGI_IS_DEFEATED = 'effects/magi_is_defeated';
exports.EFFECT_TYPE_ROLL_DIE = 'effects/roll_die';
exports.EFFECT_TYPE_MOVE_ENERGY = 'effects/move_energy';
exports.EFFECT_TYPE_PLAY_CREATURE = 'effects/play_creature';
exports.EFFECT_TYPE_PLAY_RELIC = 'effects/play_relic';
exports.EFFECT_TYPE_PLAY_SPELL = 'effects/play_spell';
exports.EFFECT_TYPE_CREATURE_ENTERS_PLAY = 'effects/creature_enters_play';
exports.EFFECT_TYPE_RELIC_ENTERS_PLAY = 'effects/relic_enters_play';
exports.EFFECT_TYPE_PAYING_ENERGY_FOR_RELIC = 'effects/paying_energy_for_relic';
exports.EFFECT_TYPE_PAYING_ENERGY_FOR_SPELL = 'effects/paying_energy_for_spell';
exports.EFFECT_TYPE_PAYING_ENERGY_FOR_CREATURE = 'effects/paying_energy_for_creature';
exports.EFFECT_TYPE_STARTING_ENERGY_ON_CREATURE = 'effects/starting_energy_on_creature';
exports.EFFECT_TYPE_MOVE_CARD_BETWEEN_ZONES = 'effects/move_card_between_zones';
exports.EFFECT_TYPE_MOVE_CARDS_BETWEEN_ZONES = 'effects/move_cards_between_zones';
exports.EFFECT_TYPE_CARD_MOVED_BETWEEN_ZONES = 'effects/card_moved_between_zones';
exports.EFFECT_TYPE_CONDITIONAL = 'effects/conditional';
exports.EFFECT_TYPE_ADD_ENERGY_TO_CREATURE_OR_MAGI = 'effects/add_energy_to_creature_or_magi';
exports.EFFECT_TYPE_ADD_ENERGY_TO_CREATURE = 'effects/add_energy_to_creature';
exports.EFFECT_TYPE_ADD_ENERGY_TO_MAGI = 'effects/add_energy_to_magi';
exports.EFFECT_TYPE_ADD_STARTING_ENERGY_TO_MAGI = 'effects/add_starting_energy_to_magi';
exports.EFFECT_TYPE_ENERGIZE = 'effects/energize';
exports.EFFECT_TYPE_DAMAGE_STEP = 'effects/damage_step';
exports.EFFECT_TYPE_RETURN_CREATURE_DISCARDING_ENERGY = 'effects/return_creature_discarding_energy';
exports.EFFECT_TYPE_RETURN_CREATURE_RETURNING_ENERGY = 'effects/return_creature_returning_energy';
exports.EFFECT_TYPE_DISCARD_ENERGY_FROM_CREATURE = 'effects/discard_energy_from_creature';
exports.EFFECT_TYPE_DISCARD_ENERGY_FROM_MAGI = 'effects/discard_energy_from_magi';
exports.EFFECT_TYPE_DISCARD_CREATURE_FROM_PLAY = 'effects/discard_creature_from_play';
exports.EFFECT_TYPE_DISCARD_CREATURE_OR_RELIC = 'effects/discard_creature_or_relic';
exports.EFFECT_TYPE_DISCARD_ENERGY_FROM_CREATURE_OR_MAGI = 'effects/discard_energy_from_creature_or_magi';
exports.EFFECT_TYPE_RESTORE_CREATURE_TO_STARTING_ENERGY = 'effects/restore_creature_to_starting_energy';
exports.EFFECT_TYPE_PAYING_ENERGY_FOR_POWER = 'effects/paying_energy_for_power';
exports.EFFECT_TYPE_DISCARD_RELIC_FROM_PLAY = 'effects/discard_relic_from_play';
exports.EFFECT_TYPE_CREATURE_ATTACKS = 'effects/creature_attacks';
exports.EFFECT_TYPE_CREATURE_IS_ATTACKED = 'effects/creature_is_attacked';
exports.EFFECT_TYPE_DRAW_CARDS_IN_DRAW_STEP = 'effects/draw_cards_in_draw_step';
exports.EFFECT_TYPE_START_OF_TURN = 'effects/start_of_turn';
exports.EFFECT_TYPE_END_OF_TURN = 'effects/end_of_turn';
exports.EFFECT_TYPE_MAGI_FLIPPED = 'effects/magi_flipped';
exports.EFFECT_TYPE_FIND_STARTING_CARDS = 'effects/find_starting_cards';
exports.EFFECT_TYPE_DRAW_REST_OF_CARDS = 'effects/draw_rest_of_cards';
exports.EFFECT_TYPE_DISCARD_CARDS_FROM_HAND = 'effects/discard_cards_from_hand';
exports.EFFECT_TYPE_FORBID_ATTACK_TO_CREATURE = 'effects/forbid_attack_to_creature';
exports.EFFECT_TYPE_ADD_DELAYED_TRIGGER = 'effects/add_delayed_trigger';
exports.NO_PRIORITY = 0;
exports.PRIORITY_PRS = 1;
exports.PRIORITY_ATTACK = 2;
exports.PRIORITY_CREATURES = 3;
exports.PROMPT_TYPE_CHOOSE_CARDS = 'prompt/choose_cards';
exports.PROMPT_TYPE_CHOOSE_N_CARDS_FROM_ZONE = 'prompt/choose_n_cards_from_zone';
exports.PROMPT_TYPE_ANY_CREATURE_EXCEPT_SOURCE = 'prompt/any_creature_except_source';
exports.PROMPT_TYPE_SINGLE_CREATURE_OR_MAGI = 'prompt/creature_or_magi';
exports.PROMPT_TYPE_SINGLE_CREATURE = 'prompt/creature';
exports.PROMPT_TYPE_OWN_SINGLE_CREATURE = 'prompt/own_creature';
exports.PROMPT_TYPE_SINGLE_CREATURE_FILTERED = 'prompt/creature_filtered';
exports.PROMPT_TYPE_NUMBER_OF_CREATURES = 'prompt/number_of_creatures';
exports.PROMPT_TYPE_NUMBER_OF_CREATURES_FILTERED = 'prompt/number_of_creatures_filtered';
exports.PROMPT_TYPE_SINGLE_MAGI = 'prompt/magi';
exports.PROMPT_TYPE_RELIC = 'prompt/relic';
exports.PROMPT_TYPE_NUMBER = 'prompt/number';
exports.RESTRICTION_TYPE = 'restrictions/type';
exports.RESTRICTION_ENERGY_LESS_THAN_STARTING = 'restrictions/energy_less_than_starting';
exports.RESTRICTION_ENERGY_LESS_THAN = 'restrictions/energy_less_than';
exports.RESTRICTION_OWN_CREATURE = 'restrictions/own_creature';
exports.RESTRICTION_OPPONENT_CREATURE = 'restrictions/opponent_creature';
exports.RESTRICTION_REGION = 'restrictions/region';
exports.RESTRICTION_CREATURE_TYPE = 'restrictions/creature_type';
exports.RESTRICTION_PLAYABLE = 'restrictions/card_playable';
exports.RESTRICTION_CREATURE_WAS_ATTACKED = 'restrictions/creature_was_attacked';
exports.RESTRICTION_MAGI_WITHOUT_CREATURES = 'restrictions/magi_without_creatures';
exports.RESTRICTION_STATUS = 'restrictions/status';
exports.TYPE_CREATURE = 'types/creature';
exports.TYPE_MAGI = 'types/magi';
exports.TYPE_RELIC = 'types/relic';
exports.TYPE_SPELL = 'types/spell';
exports.COST_X = 'X';
exports.ZONE_TYPE_ACTIVE_MAGI = 'zones/active_magi';
exports.ZONE_TYPE_MAGI_PILE = 'zones/magi_pile';
exports.ZONE_TYPE_DEFEATED_MAGI = 'zones/defeated_magi';
exports.ZONE_TYPE_DECK = 'zones/deck';
exports.ZONE_TYPE_IN_PLAY = 'zones/in_play';
exports.ZONE_TYPE_DISCARD = 'zones/discard';
exports.ZONE_TYPE_HAND = 'zones/hand';
exports.LOG_ENTRY_PLAY = 'log_entry/play';
exports.LOG_ENTRY_DRAW = 'log_entry/draw';
exports.LOG_ENTRY_CHOOSES_STARTING_CARDS = 'log_entry/choose_starting_cards';
exports.LOG_ENTRY_POWER_ACTIVATION = 'log_entry/power_activation';
exports.LOG_ENTRY_CREATURE_DISCARDED_FROM_PLAY = 'log_entry/creature_discarded_from_play';
exports.LOG_ENTRY_RELIC_DISCARDED_FROM_PLAY = 'log_entry/relic_discarded_from_play';
exports.LOG_ENTRY_TARGETING = 'log_entry/targeting';
exports.LOG_ENTRY_NUMBER_CHOICE = 'log_entry/number_choice';
exports.LOG_ENTRY_ATTACK = 'log_entry/attack';
exports.LOG_ENTRY_CREATURE_ENERGY_LOSS = 'log_entry/creature_energy_loss';
exports.LOG_ENTRY_MAGI_ENERGY_LOSS = 'log_entry/magi_energy_loss';
exports.LOG_ENTRY_CREATURE_ENERGY_GAIN = 'log_entry/creature_energy_gain';
exports.LOG_ENTRY_MAGI_ENERGY_GAIN = 'log_entry/magi_energy_gain';
exports.LOG_ENTRY_MAGI_DEFEATED = 'log_entry/magi_defeated';
//# sourceMappingURL=const.js.map